mysql> CREATE TABLE users (
    -> id INT AUTO_INCREMENT,
    -> name VARCHAR(30),
    -> type ENUM ('admin', 'normal'),
    -> PRIMARY KEY(id)
    -> );
Query OK, 0 rows affected (0.15 sec)

mysql> CREATE TABLE categories (
    -> id INT AUTO_INCREMENT,
    -> category VARCHAR(20),
    -> PRIMARY KEY (id)
    -> );
Query OK, 0 rows affected (0.16 sec)

mysql> CREATE TABLE articles (
    -> id INT AUTO_INCREMENT,
    -> article TEXT,
    -> user_id INT,
    -> category_id INT,
    -> PRIMARY KEY (id),
    -> FOREIGN KEY (user_id) REFERENCES users(id),
    -> FOREIGN KEY (category_id) REFERENCES categories(id)
    -> );
Query OK, 0 rows affected (0.22 sec)

mysql> CREATE TABLE comments (
    -> id INT AUTO_INCREMENT,
    -> article_Id INT,
    -> comment VARCHAR(200),
    -> user_id INT,
    -> PRIMARY KEY(id),
    -> FOREIGN KEY (article_id) REFERENCES articles(id),
    -> FOREIGN KEY (user_id) REFERENCES users(id)
    -> );
Query OK, 0 rows affected (0.21 sec)

mysql> INSERT INTO users (name, type)
    -> VALUES ('Jatin', 'admin'),
    -> ('Sahil', 'normal'),
    -> ('Pramod', 'normal'),
    -> ('Divya', 'normal'),
    -> ('Ankit', 'normal'),
    -> ('Rahul', 'normal'),
    -> ('Vidit', 'normal'),
    -> ('Kulraj', 'normal'),
    -> ('user3', 'normal');
Query OK, 9 rows affected (0.04 sec)
Records: 9  Duplicates: 0  Warnings: 0

mysql> INSERT INTO categories (category) VALUES
    -> ('Entertainment'),
    -> ('Science'),
    -> ('Technology'),
    -> ('Lifestyle'),
    -> ('Literature'),
    -> ('Arts');
Query OK, 6 rows affected (0.04 sec)
Records: 6  Duplicates: 0  Warnings: 0

mysql> INSERT INTO articles (article, user_id, category_id) VALUES
    -> ('This is a sample Article', 9, 2),
    -> ('This is a new Article', 9, 3),
    -> ('This is another Article', 2, 3),
    -> ('This is the fourth Article', 4, 4),
    -> ('This is a Technology Article', 1, 3),
    -> ('This is a Science Article', 9, 2);
Query OK, 6 rows affected (0.08 sec)
Records: 6  Duplicates: 0  Warnings: 0

mysql> INSERT INTO comments (comment, article_id, user_id) VALUES
    -> ('Sample Comment', 1, 2),
    -> ('New Comment', 1, 3),
    -> ('Another Comment', 1, 6),
    -> ('Just a Comment', 3, 5),
    -> ('Just another Comment', 3, 7),
    -> ('A new Comment', 4, 8),
    -> ('2nd Article Comment 1', 2, 8),
    -> ('2nd Article Comment 2', 2, 5);
Query OK, 8 rows affected (0.07 sec)
Records: 8  Duplicates: 0  Warnings: 0

#Query 1

mysql> SELECT article
    -> FROM articles JOIN users
    -> ON user_id = users.id
    -> WHERE name = 'user3';
+---------------------------+
| article                   |
+---------------------------+
| This is a sample Article  |
| This is a new Article     |
| This is a Science Article |
+---------------------------+
3 rows in set (0.00 sec)

#Query 2

mysql> SELECT article, GROUP_CONCAT(comment SEPARATOR ', ') AS comments
    -> FROM articles LEFT JOIN comments
    -> ON article_Id = articles.Id
    -> JOIN users
    -> ON articles.user_id = users.id
    -> WHERE name = 'user3'
    -> GROUP BY articles.id;
+---------------------------+----------------------------------------------+
| article                   | comments                                     |
+---------------------------+----------------------------------------------+
| This is a sample Article  | Sample Comment, New Comment, Another Comment |
| This is a new Article     | 2nd Article Comment 1, 2nd Article Comment 2 |
| This is a Science Article | NULL                                         |
+---------------------------+----------------------------------------------+
3 rows in set (0.00 sec)

#Query 3

mysql> SELECT article
    -> FROM articles LEFT JOIN comments
    -> ON article_id = articles.id
    -> WHERE comment IS NULL
    -> GROUP BY articles.id;
+------------------------------+
| article                      |
+------------------------------+
| This is a Technology Article |
| This is a Science Article    |
+------------------------------+
2 rows in set (0.00 sec)

#Query 4

mysql> SELECT article
    -> FROM articles JOIN comments
    -> ON article_id = articles.id
    -> GROUP BY articles.id
    -> HAVING COUNT(*) =
    -> (SELECT COUNT(*)
    -> FROM articles JOIN comments
    -> ON article_id = articles.id
    -> GROUP BY articles.id
    -> ORDER BY COUNT(*) DESC
    -> LIMIT 1);
+--------------------------+
| article                  |
+--------------------------+
| This is a sample Article |
+--------------------------+
1 row in set (0.00 sec)

mysql> INSERT INTO comments (comment, article_id, user_id) VALUES
    -> ('2nd comment from same user', 4, 8),
    -> ('another comment from same user', 2, 5);
Query OK, 2 rows affected (0.05 sec)
Records: 2  Duplicates: 0  Warnings: 0

#Query 5

mysql> SELECT article
    -> FROM articles LEFT JOIN comments
    -> ON article_id = articles.id
    -> GROUP BY articles.id
    -> HAVING COUNT(comments.user_id) = COUNT(DISTINCT comments.user_id);
+------------------------------+
| article                      |
+------------------------------+
| This is a sample Article     |
| This is another Article      |
| This is a Technology Article |
| This is a Science Article    |
+------------------------------+
4 rows in set (0.01 sec)